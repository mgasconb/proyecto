EN ESTE FICHERO SE EXPLICAN COMO ESTAN HECHAS LAS RELACIONES Y LAS ENTIDADES.

He cambiado los nombres de la columna para estandarizarlos todos. A partir de 
ahora el nombre de las columnas empezara por las 3 primeras letras del nombre 
de la tabla en ingles (user->use).

Si la tabla es para una relación N-M se llamara a las columnas con las primeras 
2 letras de cada tabla relacionada (users_task->ur).


USUARIOS Y GRUPOS:
	1 usuarios solo puede pertenecer a un grupo. 1 grupo puede contener varios usuarios.
	La relacion es many to one: 
		- Many to one en usuarios, se relacionan varios usuarios en sus columnas 	
			usrgrupoID con la columna grpID de grupos.
		-One to many en grupos, se relaciona un grupo en su columna grpID con varios 
			usuarios en su columna usrgrupoID.

Las demás tablas son las que definen las relaciones N-M. Estas funcionan asi:
        Las relaciones son many to many:
        Ejemplo de la tabla roles:
            * @ManyToMany(targetEntity="user")
            * @JoinTable(name="users_roles",
            *      joinColumns={@JoinColumn(name="urrolID", referencedColumnName="rolID")},
            *      inverseJoinColumns={@JoinColumn(name="uruseID", referencedColumnName="useID")}
            *      )
            
            Se relaciona la tabla roles directamente con la tabla usuario, pero 
                se usa la tabla users_roles como nexo de union entre ellas. Se 
                relacionan las columnas urrolID con la columna rolID de la tabla
                roles y se especifica una relación inversa entre las columnas 
                uruserID de la tabla users_roles y la columna useID de la tabla
                users.

                